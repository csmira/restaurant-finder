{"version":3,"sources":["components/RestaurantItem/RestaurantItem.js","components/RestaurantList/RestaurantList.js","api/opentable.js","components/common/SearchBar.js","store/actions.js","components/App/App.js","store/reducers.js","index.js"],"names":["RestaurantItem","className","tabIndex","this","props","restaurant","name","address","price","React","Component","RestaurantList","orderedRestaurants","restaurants","sort","a","b","localeCompare","filters","asc","reverse","filter","area","refine","toLowerCase","isFiltered","includes","map","key","id","renderFilteredRestaurants","connect","state","axios","create","baseURL","SearchBar","handleSearchButton","e","preventDefault","city","fetchRestaurants","alert","handleAscButton","stopPropagation","toggleAscFilter","handleDescButton","type","placeholder","aria-label","value","onChange","setCity","target","onClick","setRefineFilter","dispatch","opentable","get","params","payload","data","App","initialFilters","combineReducers","restaurantList","action","Object","assign","error","ReactDOM","render","store","createStore","reducers","applyMiddleware","thunk","document","querySelector"],"mappings":"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","file":"static/js/main.6b705a07.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../common/common.css';\r\nimport './RestaurantItem.css';\r\n\r\nclass RestaurantItem extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\" tabIndex='0'>\r\n                <div className=\"card__content\">\r\n                    {this.props.restaurant.name}\r\n                    <span className=\"text--light\">{this.props.restaurant.address}</span>\r\n                    <span className=\"price\">${this.props.restaurant.price}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RestaurantItem;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../common/common.css';\r\nimport './RestaurantList.css';\r\nimport RestaurantItem from '../RestaurantItem/RestaurantItem'\r\n\r\nclass RestaurantList extends React.Component {\r\n\r\n    renderFilteredRestaurants() {\r\n        //sort ascending or descending based on button input\r\n        let orderedRestaurants = this.props.restaurants.sort((a,b) => a.name.localeCompare(b.name));\r\n        orderedRestaurants = !this.props.filters.asc ? orderedRestaurants.reverse() : orderedRestaurants;\r\n        \r\n        //refine search\r\n        orderedRestaurants = orderedRestaurants.filter(({name, address, area}) => {\r\n            const filter = this.props.filters.refine.toLowerCase();\r\n            const isFiltered = name.toLowerCase().includes(filter) || address.toLowerCase().includes(filter) || area.toLowerCase().includes(filter);\r\n            if(filter === '' || isFiltered) {\r\n                return true;\r\n            }  \r\n            return false;\r\n        });\r\n\r\n        return orderedRestaurants.map(restaurant => {\r\n            return <RestaurantItem key={restaurant.id} restaurant={restaurant}/>;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"restaurantsGrid\">\r\n                {this.renderFilteredRestaurants()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        restaurants: state.restaurants,\r\n        filters: state.filters,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(RestaurantList);","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://opentable.herokuapp.com/api/'\r\n});","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './common.css';\r\nimport {\r\n    fetchRestaurants, \r\n    setCity, \r\n    setRefineFilter, \r\n    toggleAscFilter,\r\n} from '../../store/actions.js';\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n    handleSearchButton = e => {\r\n        e.preventDefault();\r\n        if(this.props.city !== '') {\r\n            this.props.fetchRestaurants(this.props.city);\r\n        }\r\n        else {\r\n            alert('Enter a city name');\r\n        } \r\n    }\r\n    handleAscButton = e => {\r\n        e.stopPropagation();\r\n        this.props.toggleAscFilter(true);\r\n    }\r\n\r\n    handleDescButton = e => {\r\n        e.stopPropagation();\r\n        this.props.toggleAscFilter(false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"searchBar\">\r\n                <form>\r\n                    <div className=\"ui\">\r\n                        <input  className=\"input input--lg\" \r\n                                type='text' \r\n                                placeholder='Search City' \r\n                                aria-label='search bar'\r\n                                value={this.props.city}\r\n                                onChange={(e) => this.props.setCity(e.target.value)}/>\r\n                        <button type='submit' className=\"btn\" onClick={this.handleSearchButton}>Search</button>\r\n                    </div>\r\n                    <div className=\"ui filters\">\r\n                        <input  type='text' \r\n                                className=\"input input--md\" \r\n                                placeholder='Refine Search' \r\n                                aria-label='refine bar'\r\n                                value={this.props.filters.refine} \r\n                                onChange={e => this.props.setRefineFilter(e.target.value)}/>\r\n                        <button type='button' className=\"btn\" aria-label='ascending sort' onClick={this.handleAscButton}>ASC</button>\r\n                        <button type='button' className=\"btn\" aria-label='descending sort' onClick={this.handleDescButton}>DESC</button>\r\n                    </div>\r\n                </form> \r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {restaurants: state.restaurants,\r\n            city: state.city,\r\n            filters: state.filters\r\n        };\r\n}\r\nexport default connect(mapStateToProps, {fetchRestaurants, setCity, setRefineFilter,toggleAscFilter})(SearchBar);","import opentable from '../api/opentable.js';\r\n\r\nexport const fetchRestaurants = city => async dispatch => {\r\n    try{ \r\n        const restaurants = await opentable.get('restaurants', {\r\n            params: {city}\r\n        });\r\n    \r\n        dispatch({type: 'FETCH_RESTAURANTS', payload: restaurants.data});\r\n    }\r\n    catch (err) {\r\n        dispatch({type: 'FETCH_ERROR', payload: err});\r\n    }\r\n   \r\n};\r\n\r\nexport const setCity = city => {\r\n    return {\r\n        type: 'SET_CITY',\r\n        payload: city\r\n    };\r\n};\r\n\r\nexport const setRefineFilter = filter => {\r\n    return {\r\n        type: 'SET_REFINE_FILTER',\r\n        payload: filter\r\n    };\r\n};\r\n\r\nexport const toggleAscFilter = filter => {\r\n    return {\r\n        type: 'TOGGLE_ASC_FILTER',\r\n        payload: filter\r\n    };\r\n};\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport '../common/common.css';\r\nimport './App.css';\r\nimport RestaurantList from '../RestaurantList/RestaurantList';\r\nimport SearchBar from '../common/SearchBar';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mainUI\">\r\n                <div className=\"searchOptions\">\r\n                    <h1> Restaurant Finder </h1>\r\n                    <SearchBar/>\r\n                </div>\r\n                <RestaurantList/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\n\r\nconst restaurants = (restaurantList = [], action) => {\r\n    if(action.type === 'FETCH_RESTAURANTS') {\r\n        return action.payload.restaurants.map(({id, name, address, area, price}) => {\r\n            return {id, name, address, area, price};\r\n        });\r\n    }\r\n    return restaurantList;\r\n}\r\n\r\nconst city = (city = '', action) => {\r\n    if(action.type === 'SET_CITY') {\r\n        return action.payload;\r\n    }\r\n    return city;\r\n}\r\n\r\nconst initialFilters = {\r\n    refine: '',\r\n    asc: true\r\n};\r\n\r\nconst filters = (filters = initialFilters, action) => {\r\n    switch(action.type) {\r\n        case 'SET_REFINE_FILTER': {\r\n            return Object.assign({}, filters, {\r\n                refine: action.payload\r\n            });\r\n        }\r\n        case 'TOGGLE_ASC_FILTER': {\r\n            return Object.assign({}, filters, {\r\n                asc: action.payload\r\n            });\r\n        }\r\n        default: \r\n            return filters\r\n    }\r\n}\r\n\r\nconst error = (error = '', action) => {\r\n    if(action.type === 'FETCH_ERROR') {\r\n        return action.payload;\r\n    }\r\n    return error;\r\n}\r\n\r\nexport default combineReducers({\r\n    restaurants,\r\n    city,\r\n    filters,\r\n    error,\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App/App';\r\nimport reducers from './store/reducers.js';\r\n\r\nReactDOM.render(\r\n\t<Provider store={createStore(reducers, applyMiddleware(thunk))}>\r\n\t\t<App/>\r\n\t</Provider>,\r\n\tdocument.querySelector('#root')\r\n);"],"sourceRoot":""}